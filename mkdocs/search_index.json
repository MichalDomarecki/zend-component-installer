{
    "docs": [
        {
            "location": "/",
            "text": "Component Installer for Zend Framework 3 Applications\n\n\n\n\n\n\nThis repository contains the Composer plugin class \nZend\\ComponentInstaller\\ComponentInstaller\n,\nwhich provides Composer event hooks for the events:\n\n\n\n\npost-package-install\n\n\npost-package-uninstall\n\n\n\n\nVia Composer global install\n\n\nTo install the utility for use with all projects you use:\n\n\n$ composer global require zendframework/zend-component-installer\n\n\n\nPer project installation\n\n\nTo install the utility for use with a specific project already managed by\ncomposer:\n\n\n$ composer require zendframework/zend-component-installer\n\n\n\nWriting packages that utilize the installer\n\n\nPackages can opt-in to the workflow from zend-component-installer by defining\none or more of the following keys under the \nextra.zf\n configuration in their\n\ncomposer.json\n file:\n\n\n\"extra\": {\n  \"zf\": {\n    \"component\": \"Component\\\\Namespace\",\n    \"config-provider\": \"Classname\\\\For\\\\ConfigProvider\",\n    \"module\": \"Module\\\\Namespace\"\n  }\n}\n\n\n\n\n\nA \ncomponent\n is for use specifically with zend-mvc + zend-modulemanager;\n  a \nModule\n class \nmust\n be present in the namespace associated with it.\n  The setting indicates a low-level component that should be injected to the top\n  of the modules list of one of:\n\n\nconfig/application.config.php\n\n\nconfig/modules.config.php\n\n\n\n\nconfig/development.config.php\n\n\n\n\n\n\nA \nmodule\n is for use specifically with zend-mvc + zend-modulemanager;\n  a \nModule\n class \nmust\n be present in the namespace associated with it.\n  The setting indicates a userland or third-party module that should be injected\n  to the bottom of the modules list of one of:\n\n\n\n\nconfig/application.config.php\n\n\nconfig/modules.config.php\n\n\n\n\nconfig/development.config.php\n\n\n\n\n\n\nA \nconfig-provider\n is for use with applications that utilize\n  \nexpressive-config-manager\n\n  or \nzend-config-aggregator\n\n  (which may or may not be Expressive applications). The class listed must be an\n  invokable that returns an array of configuration, and will be injected at the\n  top of:\n\n\n\n\nconfig/config.php",
            "title": "Home"
        },
        {
            "location": "/#component-installer-for-zend-framework-3-applications",
            "text": "This repository contains the Composer plugin class  Zend\\ComponentInstaller\\ComponentInstaller ,\nwhich provides Composer event hooks for the events:   post-package-install  post-package-uninstall",
            "title": "Component Installer for Zend Framework 3 Applications"
        },
        {
            "location": "/#via-composer-global-install",
            "text": "To install the utility for use with all projects you use:  $ composer global require zendframework/zend-component-installer",
            "title": "Via Composer global install"
        },
        {
            "location": "/#per-project-installation",
            "text": "To install the utility for use with a specific project already managed by\ncomposer:  $ composer require zendframework/zend-component-installer",
            "title": "Per project installation"
        },
        {
            "location": "/#writing-packages-that-utilize-the-installer",
            "text": "Packages can opt-in to the workflow from zend-component-installer by defining\none or more of the following keys under the  extra.zf  configuration in their composer.json  file:  \"extra\": {\n  \"zf\": {\n    \"component\": \"Component\\\\Namespace\",\n    \"config-provider\": \"Classname\\\\For\\\\ConfigProvider\",\n    \"module\": \"Module\\\\Namespace\"\n  }\n}   A  component  is for use specifically with zend-mvc + zend-modulemanager;\n  a  Module  class  must  be present in the namespace associated with it.\n  The setting indicates a low-level component that should be injected to the top\n  of the modules list of one of:  config/application.config.php  config/modules.config.php   config/development.config.php    A  module  is for use specifically with zend-mvc + zend-modulemanager;\n  a  Module  class  must  be present in the namespace associated with it.\n  The setting indicates a userland or third-party module that should be injected\n  to the bottom of the modules list of one of:   config/application.config.php  config/modules.config.php   config/development.config.php    A  config-provider  is for use with applications that utilize\n   expressive-config-manager \n  or  zend-config-aggregator \n  (which may or may not be Expressive applications). The class listed must be an\n  invokable that returns an array of configuration, and will be injected at the\n  top of:   config/config.php",
            "title": "Writing packages that utilize the installer"
        }
    ]
}